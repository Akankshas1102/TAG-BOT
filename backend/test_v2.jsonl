{"prompt": "Find all incidents with notes containing 'suspicious activity'", "completion": "SELECT il.inlFileNo_TXT, il.inlIncidentDetails_MEM FROM IncidentLog_TBL il WHERE il.inlIncidentDetails_MEM LIKE '%suspicious activity%';"}
{"prompt": "Count of incidents by priority level", "completion": "SELECT il.inlPriority_LNG AS PriorityLevel, COUNT(*) AS IncidentCount FROM IncidentLog_TBL il WHERE il.inlPriority_LNG IS NOT NULL GROUP BY il.inlPriority_LNG ORDER BY PriorityLevel;"}
{"prompt": "Show incidents requiring police response", "completion": "SELECT il.inlFileNo_TXT, il.inlDateTime_DTM, il.inlLocation_MEM FROM IncidentLog_TBL il WHERE il.inlPoliceRequired_BLN = 1;"}
{"prompt": "List buildings with their total incident count", "completion": "SELECT b.bldBuildingName_TXT, COUNT(il.IncidentLog_PRK) AS TotalIncidents FROM Building_TBL b LEFT JOIN IncidentLog_TBL il ON b.Building_PRK = il.inlBuilding_FRK GROUP BY b.bldBuildingName_TXT ORDER BY TotalIncidents DESC;"}
{"prompt": "Compare incident rates between weekdays and weekends last month", "completion": "SELECT CASE WHEN DATEPART(WEEKDAY, il.inlDateTime_DTM) IN (1, 7) THEN 'Weekend' ELSE 'Weekday' END AS DayType, COUNT(*) AS IncidentCount FROM IncidentLog_TBL il WHERE il.inlDateTime_DTM >= DATEADD(MONTH, -1, GETDATE()) GROUP BY CASE WHEN DATEPART(WEEKDAY, il.inlDateTime_DTM) IN (1, 7) THEN 'Weekend' ELSE 'Weekday' END;"}
{"prompt": "Get incidents with equipment damage information", "completion": "SELECT il.inlFileNo_TXT, il.inlEquipmentDamaged_MEM FROM IncidentLog_TBL il WHERE il.inlEquipmentDamaged_MEM IS NOT NULL;"}
{"prompt": "Find buildings with more than 10 incidents in the last quarter", "completion": "SELECT b.bldBuildingName_TXT, COUNT(il.IncidentLog_PRK) AS IncidentCount FROM IncidentLog_TBL il JOIN Building_TBL b ON il.inlBuilding_FRK = b.Building_PRK WHERE il.inlDateTime_DTM >= DATEADD(MONTH, -3, GETDATE()) GROUP BY b.bldBuildingName_TXT HAVING COUNT(il.IncidentLog_PRK) > 10;"}
{"prompt": "List all incidents involving visitors", "completion": "SELECT il.inlFileNo_TXT, il.inlDateTime_DTM FROM IncidentLog_TBL il WHERE il.inlVisitorInvolved_BLN = 1;"}
{"prompt": "Count incidents by severity level in each zone", "completion": "SELECT il.inlZone_FRK AS Zone, il.inlSeverity_LNG AS Severity, COUNT(*) AS IncidentCount FROM IncidentLog_TBL il WHERE il.inlSeverity_LNG IS NOT NULL GROUP BY il.inlZone_FRK, il.inlSeverity_LNG ORDER BY Zone, Severity;"}
{"prompt": "Find average response time for high priority incidents", "completion": "SELECT AVG(DATEDIFF(MINUTE, il.inlReportedDateTime_DTM, il.inlResponseDateTime_DTM)) AS AvgResponseTime FROM IncidentLog_TBL il WHERE il.inlPriority_LNG <= 2 AND il.inlResponseDateTime_DTM IS NOT NULL;"}
{"prompt": "Show incidents that required evacuation", "completion": "SELECT il.inlFileNo_TXT, il.inlDateTime_DTM, b.bldBuildingName_TXT FROM IncidentLog_TBL il JOIN Building_TBL b ON il.inlBuilding_FRK = b.Building_PRK WHERE il.inlEvacuationRequired_BLN = 1;"}
{"prompt": "Count incidents by weather condition", "completion": "SELECT il.inlWeatherCondition_TXT, COUNT(*) AS IncidentCount FROM IncidentLog_TBL il WHERE il.inlWeatherCondition_TXT IS NOT NULL GROUP BY il.inlWeatherCondition_TXT ORDER BY IncidentCount DESC;"}
{"prompt": "List incidents with equipment failure as root cause", "completion": "SELECT il.inlFileNo_TXT, il.inlDateTime_DTM, il.inlRootCause_MEM FROM IncidentLog_TBL il WHERE il.inlRootCause_MEM LIKE '%equipment failure%';"}
{"prompt": "Find incidents with follow-up actions still pending", "completion": "SELECT il.inlFileNo_TXT, il.inlFollowUpActions_MEM FROM IncidentLog_TBL il WHERE il.inlFollowUpComplete_BLN = 0 AND il.inlFollowUpActions_MEM IS NOT NULL;"}
{"prompt": "Show incidents requiring third-party contractor involvement", "completion": "SELECT il.inlFileNo_TXT, il.inlDateTime_DTM, il.inlContractorInfo_TXT FROM IncidentLog_TBL il WHERE il.inlContractorRequired_BLN = 1;"}
{"prompt": "Count incidents by resolution method", "completion": "SELECT il.inlResolutionMethod_TXT, COUNT(*) AS Count FROM IncidentLog_TBL il WHERE il.inlResolutionMethod_TXT IS NOT NULL GROUP BY il.inlResolutionMethod_TXT ORDER BY Count DESC;"}
{"prompt": "Find incidents with asset damage over $1000", "completion": "SELECT il.inlFileNo_TXT, il.inlAssetDamageValue_CUR FROM IncidentLog_TBL il WHERE il.inlAssetDamageValue_CUR > 1000;"}
{"prompt": "List incidents with legal actions taken", "completion": "SELECT il.inlFileNo_TXT, il.inlLegalActionDetails_MEM FROM IncidentLog_TBL il WHERE il.inlLegalActionTaken_BLN = 1;"}
{"prompt": "Show incidents where supervisor response time exceeded 30 minutes", "completion": "SELECT il.inlFileNo_TXT, DATEDIFF(MINUTE, il.inlReportedDateTime_DTM, il.inlSupervisorResponseDateTime_DTM) AS ResponseTime FROM IncidentLog_TBL il WHERE DATEDIFF(MINUTE, il.inlReportedDateTime_DTM, il.inlSupervisorResponseDateTime_DTM) > 30;"}
{"prompt": "Find incidents with multiple alarms triggered", "completion": "SELECT il.inlFileNo_TXT, il.inlAlarmCount_LNG FROM IncidentLog_TBL il WHERE il.inlAlarmCount_LNG > 1;"}
{"prompt": "List incidents with environmental impact notes", "completion": "SELECT il.inlFileNo_TXT, il.inlEnvironmentalImpact_MEM FROM IncidentLog_TBL il WHERE il.inlEnvironmentalImpact_MEM IS NOT NULL;"}
{"prompt": "Count incidents by compliance status", "completion": "SELECT il.inlComplianceStatus_TXT, COUNT(*) AS IncidentCount FROM IncidentLog_TBL il WHERE il.inlComplianceStatus_TXT IS NOT NULL GROUP BY il.inlComplianceStatus_TXT;"}
{"prompt": "Show incidents with witness statements recorded", "completion": "SELECT il.inlFileNo_TXT, il.inlWitnessDetails_MEM FROM IncidentLog_TBL il WHERE il.inlWitnessDetails_MEM IS NOT NULL;"}
{"prompt": "Find incidents with unusually long investigation time", "completion": "SELECT il.inlFileNo_TXT, DATEDIFF(HOUR, il.inlDateTime_DTM, il.inlInvestigationCompleteDateTime_DTM) AS InvestigationHours FROM IncidentLog_TBL il WHERE il.inlInvestigationCompleteDateTime_DTM IS NOT NULL AND DATEDIFF(HOUR, il.inlDateTime_DTM, il.inlInvestigationCompleteDateTime_DTM) > 48;"}
{"prompt": "List incidents requiring public notification", "completion": "SELECT il.inlFileNo_TXT, il.inlPublicNotificationDetails_MEM FROM IncidentLog_TBL il WHERE il.inlPublicNotificationRequired_BLN = 1;"}
