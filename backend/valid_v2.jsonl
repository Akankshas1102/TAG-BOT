{"prompt": "Get incidents that required medical assistance", "completion": "SELECT il.inlFileNo_TXT, il.inlDateTime_DTM, il.inlLocation_MEM FROM IncidentLog_TBL il WHERE il.inlMedicalRequired_BLN = 1;"}
{"prompt": "Find all incidents with response time greater than 30 minutes", "completion": "SELECT il.inlFileNo_TXT, DATEDIFF(MINUTE, il.inlReportedDateTime_DTM, il.inlResponseDateTime_DTM) AS ResponseTimeMinutes FROM IncidentLog_TBL il WHERE DATEDIFF(MINUTE, il.inlReportedDateTime_DTM, il.inlResponseDateTime_DTM) > 30;"}
{"prompt": "Calculate average incidents per month for each status", "completion": "SELECT ins.insName_TXT AS Status, AVG(MonthCount) AS AvgPerMonth FROM (SELECT MONTH(il.inlDateTime_DTM) AS MonthNum, il.inlStatus_FRK, COUNT(*) AS MonthCount FROM IncidentLog_TBL il GROUP BY MONTH(il.inlDateTime_DTM), il.inlStatus_FRK) AS MonthlyStats JOIN IncidentStatus_TBL ins ON MonthlyStats.inlStatus_FRK = ins.IncidentStatus_PRK GROUP BY ins.insName_TXT;"}
{"prompt": "Show incidents in high-risk buildings that resulted in injuries", "completion": "SELECT il.inlFileNo_TXT, b.bldBuildingName_TXT, il.inlInjuryCount_LNG FROM IncidentLog_TBL il JOIN Building_TBL b ON il.inlBuilding_FRK = b.Building_PRK WHERE b.bldRiskLevel_LNG >= 4 AND il.inlInjuryCount_LNG > 0;"}
{"prompt": "List top 5 incident types most common during night shift", "completion": "SELECT TOP 5 ic.incName_TXT AS Category, COUNT(*) AS NightCount FROM IncidentLog_TBL il JOIN IncidentCategory_TBL ic ON il.inlCategory_FRK = ic.IncidentCategory_PRK WHERE (DATEPART(HOUR, il.inlDateTime_DTM) >= 22 OR DATEPART(HOUR, il.inlDateTime_DTM) <= 6) GROUP BY ic.incName_TXT ORDER BY NightCount DESC;"}
{"prompt": "Find average time taken from reporting to response for each building", "completion": "SELECT b.bldBuildingName_TXT, AVG(DATEDIFF(MINUTE, il.inlReportedDateTime_DTM, il.inlResponseDateTime_DTM)) AS AvgResponseTime FROM IncidentLog_TBL il JOIN Building_TBL b ON il.inlBuilding_FRK = b.Building_PRK WHERE il.inlResponseDateTime_DTM IS NOT NULL GROUP BY b.bldBuildingName_TXT;"}
{"prompt": "Count incidents by day of week and hour of day", "completion": "SELECT DATENAME(WEEKDAY, il.inlDateTime_DTM) AS DayOfWeek, DATEPART(HOUR, il.inlDateTime_DTM) AS HourOfDay, COUNT(*) AS IncidentCount FROM IncidentLog_TBL il GROUP BY DATENAME(WEEKDAY, il.inlDateTime_DTM), DATEPART(HOUR, il.inlDateTime_DTM);"}
{"prompt": "Find incidents with incorrect categorization that were later fixed", "completion": "SELECT il.inlFileNo_TXT, iold.incName_TXT AS OriginalCategory, inew.incName_TXT AS NewCategory FROM IncidentLog_TBL il JOIN IncidentCategory_TBL iold ON il.inlOriginalCategory_FRK = iold.IncidentCategory_PRK JOIN IncidentCategory_TBL inew ON il.inlCategory_FRK = inew.IncidentCategory_PRK WHERE il.inlOriginalCategory_FRK IS NOT NULL AND il.inlOriginalCategory_FRK <> il.inlCategory_FRK;"}
{"prompt": "List incidents requiring regulatory reporting", "completion": "SELECT il.inlFileNo_TXT, il.inlDateTime_DTM, il.inlRegulatoryReportDetails_MEM FROM IncidentLog_TBL il WHERE il.inlRegulatoryReportRequired_BLN = 1;"}
{"prompt": "Show incidents with escalation to management", "completion": "SELECT il.inlFileNo_TXT, il.inlEscalationDateTime_DTM, il.inlEscalatedTo_TXT FROM IncidentLog_TBL il WHERE il.inlEscalationRequired_BLN = 1;"}
{"prompt": "Find buildings with decreasing incident rates over quarters", "completion": "SELECT b.bldBuildingName_TXT, DATEPART(QUARTER, il.inlDateTime_DTM) AS Quarter, COUNT(*) AS IncidentCount FROM IncidentLog_TBL il JOIN Building_TBL b ON il.inlBuilding_FRK = b.Building_PRK WHERE YEAR(il.inlDateTime_DTM) = YEAR(GETDATE()) GROUP BY b.bldBuildingName_TXT, DATEPART(QUARTER, il.inlDateTime_DTM) ORDER BY b.bldBuildingName_TXT, Quarter;"}
{"prompt": "Count incidents by root cause category", "completion": "SELECT il.inlRootCauseCategory_TXT, COUNT(*) AS IncidentCount FROM IncidentLog_TBL il WHERE il.inlRootCauseCategory_TXT IS NOT NULL GROUP BY il.inlRootCauseCategory_TXT ORDER BY IncidentCount DESC;"}
{"prompt": "Show incidents with multiple witnesses", "completion": "SELECT il.inlFileNo_TXT, il.inlWitnessCount_LNG FROM IncidentLog_TBL il WHERE il.inlWitnessCount_LNG > 1;"}
{"prompt": "Find incidents that required insurance claims", "completion": "SELECT il.inlFileNo_TXT, il.inlInsuranceClaimNumber_TXT, il.inlClaimAmount_CUR FROM IncidentLog_TBL il WHERE il.inlInsuranceClaimFiled_BLN = 1;"}
{"prompt": "List incidents with follow-up investigations", "completion": "SELECT il.inlFileNo_TXT, il.inlFollowUpInvestigationDetails_MEM, il.inlFollowUpDateTime_DTM FROM IncidentLog_TBL il WHERE il.inlFollowUpInvestigationRequired_BLN = 1;"}
{"prompt": "Show incidents marked as preventable", "completion": "SELECT il.inlFileNo_TXT, il.inlPreventableCause_MEM FROM IncidentLog_TBL il WHERE il.inlPreventable_BLN = 1;"}
{"prompt": "Count incidents by corrective action status", "completion": "SELECT il.inlCorrectiveActionStatus_TXT, COUNT(*) AS IncidentCount FROM IncidentLog_TBL il WHERE il.inlCorrectiveActionStatus_TXT IS NOT NULL GROUP BY il.inlCorrectiveActionStatus_TXT;"}
{"prompt": "Find incidents with repeated occurrence at same location", "completion": "SELECT il.inlLocation_MEM, COUNT(*) AS OccurrenceCount FROM IncidentLog_TBL il GROUP BY il.inlLocation_MEM HAVING COUNT(*) > 1 ORDER BY OccurrenceCount DESC;"}
{"prompt": "Show incidents that affected critical systems", "completion": "SELECT il.inlFileNo_TXT, il.inlSystemsAffected_MEM FROM IncidentLog_TBL il WHERE il.inlCriticalSystemAffected_BLN = 1;"}
{"prompt": "List incidents with investigation costs exceeding budget", "completion": "SELECT il.inlFileNo_TXT, il.inlInvestigationCost_CUR, il.inlInvestigationBudget_CUR FROM IncidentLog_TBL il WHERE il.inlInvestigationCost_CUR > il.inlInvestigationBudget_CUR;"}
{"prompt": "Find incidents affecting multiple buildings", "completion": "SELECT il.inlFileNo_TXT, il.inlAffectedBuildingCount_LNG FROM IncidentLog_TBL il WHERE il.inlAffectedBuildingCount_LNG > 1;"}
{"prompt": "Show incidents with staff injuries requiring medical leave", "completion": "SELECT il.inlFileNo_TXT, il.inlStaffInjured_LNG, il.inlMedicalLeaveRequired_BLN FROM IncidentLog_TBL il WHERE il.inlStaffInjured_LNG > 0 AND il.inlMedicalLeaveRequired_BLN = 1;"}
{"prompt": "Count incidents by impact level", "completion": "SELECT il.inlImpactLevel_LNG, COUNT(*) AS IncidentCount FROM IncidentLog_TBL il WHERE il.inlImpactLevel_LNG IS NOT NULL GROUP BY il.inlImpactLevel_LNG ORDER BY il.inlImpactLevel_LNG;"}
{"prompt": "Find incidents with external agency involvement", "completion": "SELECT il.inlFileNo_TXT, il.inlExternalAgencyName_TXT, il.inlExternalReferenceNo_TXT FROM IncidentLog_TBL il WHERE il.inlExternalAgencyInvolved_BLN = 1;"}
{"prompt": "Show incidents with incident commander assigned", "completion": "SELECT il.inlFileNo_TXT, il.inlIncidentCommander_FRK FROM IncidentLog_TBL il WHERE il.inlIncidentCommander_FRK IS NOT NULL;"}